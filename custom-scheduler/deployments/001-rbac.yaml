# Service account for the custom scheduler
apiVersion: v1
kind: ServiceAccount
metadata:
  name: custom-scheduler
  namespace: kube-system
---
# Role for the custom scheduler
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: custom-scheduler-role
rules:
- apiGroups: [ "" ]
  resources: [ "endpoints" ]
  verbs: [ "get", "create", "update" ]
- apiGroups: [ "" ]
  resources: [ "nodes" ]
  verbs: [ "get", "list", "watch" ]
- apiGroups: [ "" ]
  resources: [ "pods" ]
  verbs: [ "get", "list", "watch", "update", "patch" ]
- apiGroups: [ "" ]
  resources: [ "bindings", "pods/binding" ]
  verbs: [ "create" ]
- apiGroups: [ "" ]
  resources: [ "pods/status" ]
  verbs: [ "update", "patch" ]
- apiGroups: [ "" ]
  resources: [ "events" ]
  verbs: [ "create", "patch", "update" ]
---
# Role binding for the custom scheduler
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: custom-scheduler-binding
subjects:
- kind: ServiceAccount
  name: custom-scheduler
  namespace: kube-system
roleRef:
  kind: ClusterRole
  name: custom-scheduler-role
  apiGroup: rbac.authorization.k8s.io
---
# Service account for the node daemon
apiVersion: v1
kind: ServiceAccount
metadata:
  name: node-daemon
  namespace: kube-system
---
# Role for the node daemon
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: node-daemon-role
rules:
- apiGroups: [ "" ]
  resources: [ "nodes" ]
  verbs: [ "get", "list", "watch", "update", "patch" ]
- apiGroups: [ "" ]
  resources: [ "events" ]
  verbs: [ "create", "patch" ]
---
# Role binding for the node daemon
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: node-daemon-binding
subjects:
- kind: ServiceAccount
  name: node-daemon
  namespace: kube-system
roleRef:
  kind: ClusterRole
  name: node-daemon-role
  apiGroup: rbac.authorization.k8s.io
