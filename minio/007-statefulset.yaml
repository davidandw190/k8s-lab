apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: minio
  namespace: minio-system
  labels:
    app.kubernetes.io/name: minio
    app.kubernetes.io/component: object-storage
spec:
  serviceName: minio
  replicas: 4
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "minio-role"
        vault.hashicorp.com/agent-inject-secret-minio-config: "minio/data/config"
        vault.hashicorp.com/agent-inject-template-minio-config: |
          {{- with secret "minio/data/config" -}}
          export MINIO_ROOT_USER="{{ .Data.data.MINIO_ROOT_USER }}"
          export MINIO_ROOT_PASSWORD="{{ .Data.data.MINIO_ROOT_PASSWORD }}"
          export MINIO_DOMAIN="{{ .Data.data.MINIO_DOMAIN }}"
          export MINIO_REGION="{{ .Data.data.MINIO_REGION }}"
          {{- end -}}
        prometheus.io/scrape: "true"
        prometheus.io/port: "9000"
    spec:
      serviceAccountName: minio-vault-auth
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        runAsGroup: 1000
        runAsNonRoot: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - minio
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: minio
        image: quay.io/minio/minio:RELEASE.2024-02-14T21-17-15Z
        imagePullPolicy: IfNotPresent
        command:
        - "/bin/sh"
        - "-c"
        args:
        - |
          source /vault/secrets/minio-config
          minio server /data --console-address ":9001"
        ports:
        - name: api
          containerPort: 9000
        - name: console
          containerPort: 9001
        envFrom:
        - configMapRef:
            name: minio-config
        resources:
          requests:
            cpu: "1"
            memory: "2Gi"
          limits:
            cpu: "2"
            memory: "4Gi"
        volumeMounts:
        - name: data
          mountPath: /data
        startupProbe:
          httpGet:
            path: /minio/health/live
            port: api
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 30
        livenessProbe:
          httpGet:
            path: /minio/health/live
            port: api
            scheme: HTTP
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /minio/health/ready
            port: api
            scheme: HTTP
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 100Gi
